{"is_source_file": true, "format": "Python", "description": "This file defines various API views for a Django REST Framework backend, handling user authentication, conversation management, and interactions with a weather Q&A engine.", "external_files": ["django.contrib.auth", "rest_framework", "./models", "./serializers", "./services"], "external_methods": ["django.contrib.auth.login", "django.contrib.auth.logout", "django.contrib.auth.authenticate", "rest_framework.decorators.api_view", "rest_framework.decorators.permission_classes", "rest_framework.response.Response", "django.views.decorators.csrf.ensure_csrf_cookie", "Conversation.objects.get", "Message.objects.create", "WeatherQnAEngine.answer"], "published": ["health", "register", "login", "logout", "ask", "conversations", "conversation_detail", "csrf_token"], "classes": [], "methods": [{"name": "health(request)", "description": "Returns a simple health status message indicating the server is operational.", "scope": "", "scopeKind": ""}, {"name": "register(request)", "description": "Handles user registration by creating a new User object after validation.", "scope": "", "scopeKind": ""}, {"name": "login(request)", "description": "Authenticates a user and starts a session.", "scope": "", "scopeKind": ""}, {"name": "logout(request)", "description": "Ends the user's session.", "scope": "", "scopeKind": ""}, {"name": "ask(request)", "description": "Processes a question from the user, creating or retrieving a conversation and storing messages, then querying the weather Q&A engine for an answer.", "scope": "", "scopeKind": ""}, {"name": "conversations(request)", "description": "Lists the conversations for an authenticated user.", "scope": "", "scopeKind": ""}, {"name": "conversation_detail(request, conversation_id: int)", "description": "Retrieves details of a specific conversation, including all messages.", "scope": "", "scopeKind": ""}, {"name": "csrf_token(request)", "description": "Provides a CSRF token for frontend clients to include in subsequent requests.", "scope": "", "scopeKind": ""}], "calls": ["django_login", "django_logout", "authenticate", "Conversation.objects.get", "Message.objects.create", "WeatherQnAEngine().answer"], "search-terms": ["views.py", "API views", "user authentication", "conversation management", "WeatherQnAEngine", "DRF", "serializers", "csrf"], "state": 2, "file_id": 12, "knowledge_revision": 67, "git_revision": "e46b39785a4acb6f32f129412b5eb4f35a931f3b", "revision_history": [{"32": "cb4b6733bd5abcc3913b388b2fe7386d8724bb10"}, {"43": "cb4b6733bd5abcc3913b388b2fe7386d8724bb10"}, {"57": "b9d5ad810ec721ce944acf3e7417deb7805d2499"}, {"66": "b9d5ad810ec721ce944acf3e7417deb7805d2499"}, {"67": "e46b39785a4acb6f32f129412b5eb4f35a931f3b"}], "ctags": [{"_type": "tag", "name": "ask", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def ask(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "conversation_detail", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def conversation_detail(request, conversation_id: int):$/", "language": "Python", "kind": "function", "signature": "(request, conversation_id: int)"}, {"_type": "tag", "name": "conversations", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def conversations(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "csrf_token", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def csrf_token(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "django_login", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^from django.contrib.auth import login as django_login, logout as django_logout, authenticate$/", "language": "Python", "kind": "unknown", "nameref": "unknown:login"}, {"_type": "tag", "name": "django_logout", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^from django.contrib.auth import login as django_login, logout as django_logout, authenticate$/", "language": "Python", "kind": "unknown", "nameref": "unknown:logout"}, {"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def health(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def login(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def logout(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def register(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}], "hash": "855d97e52c909fbfb39f884b0a428237", "format-version": 4, "code-base-name": "qna_backend", "filename": "qna_backend/api/views.py"}