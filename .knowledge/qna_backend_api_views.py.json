{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for a Django Rest Framework backend handling user authentication, health checks, and a weather Q&A conversation system, including models, serializers, and service integration.", "external_files": [".models", ".serializers", ".services"], "external_methods": ["django.contrib.auth.login", "django.contrib.auth.logout", "django.contrib.auth.authenticate", "Conversation.objects.get", "Conversation.objects.create", "Message.objects.create", "WeatherQnAEngine.answer"], "published": ["health", "register", "login", "logout", "ask", "conversations", "conversation_detail"], "classes": [], "methods": [{"name": "health(request)", "description": "Health check endpoint to confirm server is running.", "scope": "", "scopeKind": ""}, {"name": "register(request)", "description": "User registration endpoint, creates a new user with username, password, and optional email.", "scope": "", "scopeKind": ""}, {"name": "login(request)", "description": "Authenticates user and starts a session.", "scope": "", "scopeKind": ""}, {"name": "logout(request)", "description": "Ends user session.", "scope": "", "scopeKind": ""}, {"name": "ask(request)", "description": "Handles user questions, manages conversations, and retrieves answers from WeatherQnAEngine.", "scope": "", "scopeKind": ""}, {"name": "conversations(request)", "description": "Lists all conversations for the authenticated user.", "scope": "", "scopeKind": ""}, {"name": "conversation_detail(request, conversation_id: int)", "description": "Retrieves detailed messages of a specific conversation.", "scope": "", "scopeKind": ""}, {"name": "csrf_token(request)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["django_login(request, user)", "django_logout(request)", "authenticate(username=..., password=...)", "Conversation.objects.get(id=..., user=...)", "Conversation.objects.create(user=..., title=...)", "Message.objects.create(conversation=..., role=..., content=...)", "WeatherQnAEngine().answer(question)"], "search-terms": ["WeatherQnAEngine", "Conversation", "Message", "ask", "conversation", "api_view", "serializers", "views"], "state": 2, "file_id": 12, "knowledge_revision": 66, "git_revision": "b9d5ad810ec721ce944acf3e7417deb7805d2499", "revision_history": [{"32": "cb4b6733bd5abcc3913b388b2fe7386d8724bb10"}, {"43": "cb4b6733bd5abcc3913b388b2fe7386d8724bb10"}, {"57": "b9d5ad810ec721ce944acf3e7417deb7805d2499"}, {"66": "b9d5ad810ec721ce944acf3e7417deb7805d2499"}], "ctags": [{"_type": "tag", "name": "ask", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def ask(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "conversation_detail", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def conversation_detail(request, conversation_id: int):$/", "language": "Python", "kind": "function", "signature": "(request, conversation_id: int)"}, {"_type": "tag", "name": "conversations", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def conversations(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "csrf_token", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def csrf_token(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "django_login", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^from django.contrib.auth import login as django_login, logout as django_logout, authenticate$/", "language": "Python", "kind": "unknown", "nameref": "unknown:login"}, {"_type": "tag", "name": "django_logout", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^from django.contrib.auth import login as django_login, logout as django_logout, authenticate$/", "language": "Python", "kind": "unknown", "nameref": "unknown:logout"}, {"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def health(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def login(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def logout(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/ai-qa-chatbot-platform-2765-2775/qna_backend/api/views.py", "pattern": "/^def register(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}], "hash": "855d97e52c909fbfb39f884b0a428237", "format-version": 4, "code-base-name": "qna_backend", "filename": "qna_backend/api/views.py"}